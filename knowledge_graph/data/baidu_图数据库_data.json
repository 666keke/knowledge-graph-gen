[
  {
    "title": "图数据库",
    "url": "https://zh.wikipedia.org/wiki/图数据库",
    "summary": "在计算机科学中，图数据库（英語：graph database，GDB[1]）是一个使用图结构进行语义查询的数据库，它使用节点、边和属性来表示和存储数据。该系统的关键概念是图，它直接将存储中的数据项，与数据节点和节点间表示关系的边的集合相关联。这些关系允许直接将存储区中的数据链接在一起，并且在许多情况下，可以通过一个操作进行检索。图数据库将数据之间的关系作为优先级。查询图数据库中的关系很快，因为它们永久存储在数据库本身中。可以使用图数据库直观地显示关系，使其对于高度互连的数据非常有用。[2]",
    "content": "在计算机科学中，图数据库（英語：graph database，GDB[1]）是一个使用图结构进行语义查询的数据库，它使用节点、边和属性来表示和存储数据。该系统的关键概念是图，它直接将存储中的数据项，与数据节点和节点间表示关系的边的集合相关联。这些关系允许直接将存储区中的数据链接在一起，并且在许多情况下，可以通过一个操作进行检索。图数据库将数据之间的关系作为优先级。查询图数据库中的关系很快，因为它们永久存储在数据库本身中。可以使用图数据库直观地显示关系，使其对于高度互连的数据非常有用。[2]\n图数据库是一种非关系型数据库，以解决现有关系数据库的局限性。图模型明确地列出了数据节点之间的依赖关系，而关系模型和其他NoSQL数据库模型则通过隐式连接来链接数据。图数据库从设计上，就是可以简单快速地检索难以在关系系统中建模的复杂层次结构的。图数据库与20世纪70年代的网络模型数据库相似，它们都表示一般的图，但是网络模型数据库在较低的抽象层次[3]上运行，并且不能轻松遍历一系列边。[4]\n图数据库的底层存储机制可能各有不同。有些依赖于关系引擎并将图数据“存储”到表中（虽然表是一个逻辑元素，但是这种方法在图数据库、图数据库管理系统和实际存储数据的物理设备之间施加了另一层抽象）。另一些则使用键值存储或文件導向的數據庫进行存储，使它们具有固有的NoSQL结构。大多数基于非关系存储引擎的图数据库还添加了标记或属性的概念，这些标记或属性本质上是具有指向另一个文档的指针的关系。这样就可以对数据元素进行分类，以便于集中检索。\n从图数据库中检索数据需要SQL之外的查詢語言，SQL是为了处理关系系统中的数据而设计的，因此无法“优雅地”处理遍历图。截至2017年 (2017-Missing required parameter 1=month!)[update]，没有一个像SQL那样通用的图查询语言，通常都是仅限与一个产品的。不过，已经有一些标准化的工作，使得Gremlin、SPARQL和Cypher成为了多供应商查询语言。除了具有查询语言接口外，还可以通过应用程序接口（API）访问一些图数据库。\n图数据库与图计算引擎不同。图数据库是转换关系OLTP数据库的技术。而图计算引擎在OLAP中用于批量分析。由于主要技术公司在使用专有图数据库方面的成功以及开源图数据库的引入，[5] 图数据库在2000年代引起了相当大的关注。\n以下是值得关注的图形数据库列表：",
    "info_box": {},
    "categories": [
      "数据库",
      "圖資料庫",
      "含有英語的條目"
    ],
    "source": "wikipedia"
  }
]